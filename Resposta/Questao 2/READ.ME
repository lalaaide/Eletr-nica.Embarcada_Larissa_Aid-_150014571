1. Quais as diferenças entre os barramentos de dados e de endereços?

R: . O Barramento de Dados (Data Bus) transmite dados entre as unidades. Portanto, um microprocessador de 8 bits requer um barramento de 
dados de 8 linhas para transmitir dados de 8 bits em paralelo. Se o barramento de dados para um microprocessador de 64 bits fosse 
formado por 8 linhas, seriam necessárias oito transmissões sucessivas, tornando mais lento o sistema. O Barramento de Dados é bi-direcional,
isto é, pode transmitir em ambas as direções.
2. O Barramento de Endereço (Address Bus) é usado para selecionar a origem ou destino de sinais transmitidos num dos outros barramentos ou 
numa de suas linhas. Ele conduz endereços. Uma função típica do Barramento de Endereço é selecionar um registrador num dos dispositivos do
sistema que é usado como a fonte ou o destino do dado. O Barramento de Endereço do nosso computador padrão tem 16 linhas e pode endereçar
216 (64 K) dispositivos (1K= 1024, ou 210 , no jargão de computação).

2. Quais são as diferenças entre as memórias RAM e ROM? 

R: A memoria RAM é uma memoria de acesso aleatorio que permite tanta a escrita como a leitura, esse tipo de memoria nao armazena conteudos 
permanentmente, ou seja é um tipo de memória volátil que serve para rodar aplicações depois que o computador já está ligado, e cujas 
informações são perdidas depois do desligamento da máquina. 
A memoria ROM é uma memoria somente para leitura e tambem é não volátil, ja que está localizada principalmente no chip responsável pela 
iniciação do sistema é lá que as informações básicas do computador ficam armazenadas, portanto não são afetadas quando o dispositivo é 
desligado.

3. Considere o código abaixo:

#include <stdio.h>
int main(void)
{
	int i;
	printf("Insira um número inteiro: ");
	scanf("%d", &i);
	if(i%2)
		printf("%d eh impar.\n");
	else
		printf("%d eh par.\n");
	return 0;
}
Para este código, responda: (a) A variável i é armazenada na memória RAM ou ROM? Por quê? 

R: Na memoria RAM, pois "i" é uma variavel usada temporariamente no codigo e deve ter um acesso rapido. 

(b) O programa compilado a partir deste código é armazenado na memória RAM ou ROM? Por quê?


4. Quais são as diferenças, vantagens e desvantagens das arquiteturas Harvard e Von Neumann?

R: A Arquitetura de Harvard baseia-se na separação de barramentos de dados das memórias onde estão as instruções de programa e das 
memórias de dados, permitindo que um processador possa acessar as duas simultaneamente, obtendo um desempenho melhor do que a da 
Arquitetura de von Neumann, pois pode buscar uma nova instrução enquanto executa outra. Arquitetura mais complexa, geralmente RISC e 
permite pipelining. Ja a Arquitetura de Von Neumann é uma arquitetura mais simples, porém mais lenta que arquitetura de Harvard pois não
permite acesso simultâneo das memorias. Geralmente arquitetura CISC.


5. Considere a variável inteira i, armazenando o valor 0x8051ABCD. Se i é armazenada na memória a partir do endereço 0x0200, como ficam 
este byte e os seguintes, considerando que a memória é: 
(a) Little-endian; 

R:
(b) Big-endian.

Sabendo que o processador do MSP430 tem registradores de 16 bits, como ele soma duas variáveis de 32 bits?
