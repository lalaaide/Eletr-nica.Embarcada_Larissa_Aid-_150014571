Para todas as questões, considere que as variáveis f, g, h, i e j são do tipo inteiro (16 bits na arquitetura do MSP430), 
e que o vetor A[] é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores:

f: R4
g: R5
h: R6
i: R7
j: R8
A: R9
Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.

1. Traduza as seguintes linhas em C para a linguagem assembly do MSP430. Utilize somente as seguintes instruções: mov.w, add.w e sub.w.

(a) f = 0;

R: mov.w #0, R4; 

(b) g++;

R: add.w #1, R5;

(c) h--;

R: sub.w #1, R6; 

(d) i += 2;

R: add.w #2, R7; 

(e) j -= 2;

R: sub.w #2, R8;

Traduza as seguintes linhas em C para a linguagem assembly do MSP430. Utilize somente as seguintes instruções: mov.w, add.w, sub.w, 
clr.w, dec.w, decd.w, inc.w e incd.w.

(a) f = 0;

R: clr.w R4; 

(b) g++;

R: inc.w R5; 

(c) h--;

R: dec.w R6; 

(d) i += 2;

R: incd.w R7;

(e) j -= 2;

R: decd.w R8;

Traduza as seguintes linhas em C para a linguagem assembly do MSP430. Utilize somente as seguintes instruções: mov.w, add.w, sub.w, 
clr.w, dec.w, decd.w, inc.w e incd.w.

(a) f *= 2;

mov.w R4, R15;
add.w R15, R4;

(b) g *= 3;

R: mov.w R5, R14;
    add.w R14, R5;
    add.w R14, R5;

(c) h *= 4;

R: mov.w R6, R13; 
   add.w R13, R6; 
   add.w R13, R6;
   add.w R13, R6;

(d) A[2] = A[1] + A[0];

mov.w 0(R9), 4(R9);
add.w 2(R9), 4(R9);

(e) A[3] = 2*f - 4*h;

rra R4;      //desloca R4 pra direita (multiplica por 2) R4 = 2*f
rra R6;     // desloca R6 pra direita (multiplica por 2) R6 = 2*h
mov.w R6, R15
rra R15;   // desloca R6 novamente pra direita (multiplica por 2) R4 = 4*h
mov.w R4, 6(R9); //  A[3] = 2*f
sub R15, 6(R9); //   A[3] = 2*f - 4*h

(f) A[3] = 2*(f - 2*h);

mov.w R6, R15;  //R15 = h
rra R15;       // desloca R6 pra direita (multiplica por 2) R15 = 2*h
sub R4, R15;  // R15 = f - 2*h
mov.w R15, 6(R9) // A[3] = f - 2*h 
add 6(R9), 6(R9) 




